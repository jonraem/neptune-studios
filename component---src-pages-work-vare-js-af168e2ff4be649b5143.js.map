{"version":3,"sources":["webpack:///./src/components/Timeline/timeline.module.css","webpack:///./src/pages/work/vare.js","webpack:///./src/components/FullWidth/background.js","webpack:///./src/components/Timeline/timeline.js"],"names":["module","exports","reversed","Vare","data","props","isMobile","useMedia","useState","showcaseIndex","setShowcaseIndex","currentShowcase","showcase","edges","find","edge","node","contentfulid","currentShowcaseImage","renderImageAndText","title","description","image","key","imagePath","fluid","maxHeight","undefined","isReversed","includes","className","pagesStyles","page","charSet","rel","href","currentPath","path","styles","vareHero","hero","subtitle","heroClassName","vareHeroImage","heroAlt","heroImage","linkBackTo","content","vareFeatures","tripleFeature","feature","map","index","svgPath","svgImage","file","url","paragraph","timeline","timelineItems","imageAndText","fullWidthBackground","height","bgColor","details","handlePreviousShowcase","length","handleNextShowcase","style","width","imgStyle","left","right","margin","objectFit","showcaseImagesLength","handleChangeShowcaseIndex","quote","quotation","results","query","FullWidthBackground","position","overflow","marginLeft","marginRight","Timeline","item","point","line","wrapper"],"mappings":"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","file":"component---src-pages-work-vare-js-af168e2ff4be649b5143.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeline\":\"timeline-module--timeline--20MtR\",\"item\":\"timeline-module--item--A7Dws\",\"title\":\"timeline-module--title--1JxYm\",\"description\":\"timeline-module--description--2U6HK\",\"point\":\"timeline-module--point--2Tx9w\",\"line\":\"timeline-module--line--3uv7B\",\"wrapper\":\"timeline-module--wrapper--MBdaZ\"};","import { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { get } from 'lodash';\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Feature from '../../components/Feature/feature';\nimport Footer from '../../components/Footer/footer';\nimport FullWidthBackground from '../../components/FullWidth/background';\nimport Header from '../../components/Header/header';\nimport Hero from '../../components/Hero/hero';\nimport ImageAndText from '../../components/ImageAndText/imageAndText';\nimport Quote from '../../components/Quote/quote';\nimport { VareResults as Results } from '../../components/Results/results';\nimport MobileShowcase from '../../components/Showcase/mobileShowcase';\nimport Showcase from '../../components/Showcase/showcase';\nimport Timeline from '../../components/Timeline/timeline';\nimport useMedia from '../../hooks/useMedia';\nimport pagesStyles from '../pages.module.css';\nimport styles from './work.module.css';\n\nconst reversed = ['work:vare:imageAndText2', 'work:vare:imageAndText4'];\n\nconst Vare = ({ data, ...props }) => {\n  const isMobile = useMedia('(max-width: 480px)');\n  const [showcaseIndex, setShowcaseIndex] = useState(0);\n  const currentShowcase = data.showcase.edges.find(\n    edge => edge.node.contentfulid === `work:vare:showcase${showcaseIndex + 1}`\n  );\n  const currentShowcaseImage = get(currentShowcase, 'node.images[0]');\n\n  const handlePreviousShowcase = () => {\n    if (showcaseIndex === 0) {\n      setShowcaseIndex(data.showcase.edges.length - 1);\n    } else {\n      setShowcaseIndex(showcaseIndex - 1);\n    }\n  };\n\n  const handleNextShowcase = () => {\n    if (showcaseIndex === data.showcase.edges.length - 1) {\n      setShowcaseIndex(0);\n    } else {\n      setShowcaseIndex(showcaseIndex + 1);\n    }\n  };\n\n  const renderImageAndText = edge => {\n    if (\n      edge &&\n      edge.node &&\n      edge.node.contentfulid &&\n      edge.node.title &&\n      edge.node.description &&\n      edge.node.image\n    ) {\n      return (\n        <ImageAndText\n          key={edge.node.contentfulid}\n          title={edge.node.title}\n          description={edge.node.description}\n          imagePath={edge.node.image && edge.node.image.fluid}\n          maxHeight={\n            edge.node.contentfulid === 'work:vare:imageAndText2'\n              ? 350\n              : undefined\n          }\n          isReversed={reversed.includes(edge.node.contentfulid)}\n        />\n      );\n    } else return null;\n  };\n\n  return (\n    <div className={pagesStyles.page}>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Neptune Studios | Case Väre</title>\n        <link rel=\"canonical\" href=\"https://neptunestudios.com/work/vare\" />\n      </Helmet>\n      <Header currentPath={props.path} />\n      <Hero\n        className={styles.vareHero}\n        title={data.hero.title}\n        subtitle={data.hero.subtitle}\n        description={data.hero.description}\n        heroClassName={styles.vareHeroImage}\n        heroAlt=\"Phone with Väppi application\"\n        heroImage={data.hero?.image?.fluid}\n        linkBackTo=\"/work\"\n      />\n      <div className={pagesStyles.content}>\n        <div className={styles.vareFeatures}>\n          {data.tripleFeature.feature.map((feature, index) => (\n            <Feature\n              key={`${feature.title}:${index}`}\n              svgPath={feature.svgImage.file.url}\n              title={feature.title}\n              subtitle={feature.subtitle}\n              paragraph={feature.description.description}\n            />\n          ))}\n        </div>\n        <Timeline\n          title={data.timeline.title}\n          timelineItems={data.timeline.timelineItems}\n        />\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:vare:imageAndText1'\n          )\n        )}\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:vare:imageAndText2'\n          )\n        )}\n        <FullWidthBackground\n          imagePath={\n            data.fullWidthBackground.image &&\n            data.fullWidthBackground.image.fluid\n          }\n          height={'50rem'}\n        />\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:vare:imageAndText3'\n          )\n        )}\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:vare:imageAndText4'\n          )\n        )}\n        {!isMobile && (\n          <Showcase\n            bgColor=\"#e23c52\"\n            currentShowcase={currentShowcase}\n            height={currentShowcaseImage.file.details.image.height / 2}\n            handlePreviousShowcase={handlePreviousShowcase}\n            handleNextShowcase={handleNextShowcase}\n          >\n            {!!currentShowcaseImage && (\n              <Img\n                fluid={currentShowcaseImage.fluid}\n                style={{ width: '100%' }}\n                imgStyle={{\n                  width: '28rem',\n                  height: 'unset',\n                  left: 0,\n                  right: 0,\n                  margin: '0 auto',\n                  objectFit: 'contain',\n                }}\n              />\n            )}\n          </Showcase>\n        )}\n        {isMobile && (\n          <MobileShowcase\n            bgColor=\"#e23c52\"\n            currentShowcase={currentShowcase}\n            showcaseIndex={showcaseIndex}\n            showcaseImagesLength={data.showcase.edges.length}\n            handleChangeShowcaseIndex={index => setShowcaseIndex(index)}\n          >\n            {!!currentShowcaseImage && (\n              <Img\n                fluid={currentShowcaseImage.fluid}\n                style={{ width: '100%' }}\n                imgStyle={{\n                  width: '19rem',\n                  height: 'unset',\n                  left: 0,\n                  right: 0,\n                  margin: '0 auto',\n                  objectFit: 'contain',\n                }}\n              />\n            )}\n          </MobileShowcase>\n        )}\n        <Quote quote={data.quotation} />\n        <Results results={data.results} />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Vare;\n\nexport const query = graphql`\n  query {\n    hero: contentfulHero(contentfulid: { eq: \"work:vare:hero\" }) {\n      title\n      subtitle\n      description {\n        raw\n      }\n      image {\n        fluid {\n          ...GatsbyContentfulFluid_noBase64\n        }\n      }\n    }\n    tripleFeature: contentfulTripleFeature(\n      contentfulid: { eq: \"work:vare:triplefeature\" }\n    ) {\n      feature {\n        title\n        subtitle\n        description {\n          description\n        }\n        svgImage {\n          file {\n            url\n          }\n        }\n      }\n    }\n    timeline: contentfulTimeline(contentfulid: { eq: \"work:vare:timeline\" }) {\n      title\n      timelineItems {\n        id\n        title\n        description\n      }\n    }\n    imageAndText: allContentfulImageAndText(\n      filter: { contentfulid: { regex: \"/work:vare:imageAndText/\" } }\n    ) {\n      edges {\n        node {\n          contentfulid\n          title\n          description {\n            raw\n          }\n          image {\n            fluid {\n              ...GatsbyContentfulFluid_noBase64\n            }\n          }\n        }\n      }\n    }\n    fullWidthBackground: contentfulFullWidthBackground(\n      contentfulid: { eq: \"work:vare:fullWidthBackground\" }\n    ) {\n      image {\n        fluid(maxWidth: 2800, quality: 100) {\n          ...GatsbyContentfulFluid_noBase64\n        }\n      }\n    }\n    showcase: allContentfulShowcase(\n      filter: { contentfulid: { regex: \"/work:vare:showcase/\" } }\n    ) {\n      edges {\n        node {\n          contentfulid\n          title\n          featureDescriptions {\n            id\n            description\n          }\n          images {\n            fluid {\n              ...GatsbyContentfulFluid_noBase64\n            }\n            file {\n              details {\n                image {\n                  height\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    quotation: contentfulQuotation(\n      contentfulid: { eq: \"work:vare:quotation\" }\n    ) {\n      quote\n    }\n    results: contentfulResults(contentfulid: { eq: \"work:vare:results\" }) {\n      title\n      description {\n        raw\n      }\n      title2\n      description2\n      title3\n      description3\n      title4\n      description4\n    }\n  }\n`;\n","import Img from 'gatsby-image';\nimport React from 'react';\nimport styles from './fullWidth.module.css';\nimport FullWidthGrey from './grey';\n\nconst FullWidthBackground = props => {\n  return (\n    <div className={styles.fullWidthBackground}>\n      <FullWidthGrey />\n      <Img\n        fluid={props.imagePath}\n        style={{\n          position: 'relative',\n          height: props.height || '40rem',\n          width: '100%',\n          overflow: 'visible',\n        }}\n        imgStyle={{\n          position: 'absolute',\n          height: '100%',\n          width: '100vw',\n          left: '50%',\n          right: '50%',\n          marginLeft: '-50vw',\n          marginRight: '-50vw',\n          objectFit: 'cover',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default FullWidthBackground;\n","import React from 'react';\nimport useMedia from '../../hooks/useMedia';\nimport CenterTitle from '../CenterTitle/centerTitle';\nimport FullWidthGrey from '../FullWidth/grey';\nimport styles from './timeline.module.css';\n\nconst Timeline = props => {\n  const isMobile = useMedia('(max-width: 480px)');\n  return (\n    <div className={styles.timeline}>\n      <FullWidthGrey />\n      <CenterTitle>{props.title}</CenterTitle>\n      {props.timelineItems.map(item => {\n        if (isMobile) {\n          return (\n            <div key={item.title} className={styles.item}>\n              <div className={styles.point} />\n              <div className={styles.line} />\n              <div className={styles.wrapper}>\n                <div className={styles.title}>{item.title}</div>\n                <div className={styles.description}>{item.description}</div>\n              </div>\n            </div>\n          );\n        } else\n          return (\n            <div key={item.title} className={styles.item}>\n              <div className={styles.title}>{item.title}</div>\n              <div className={styles.point} />\n              <div className={styles.line} />\n              <div className={styles.description}>{item.description}</div>\n            </div>\n          );\n      })}\n    </div>\n  );\n};\n\nexport default Timeline;\n"],"sourceRoot":""}