{"version":3,"sources":["webpack:///./src/pages/work/work.module.css","webpack:///./src/assets/png/case-hero.png","webpack:///./src/components/imageAndText.js","webpack:///./src/pages/work/index.js"],"names":["module","exports","props","className","styles","imageAndText","style","isReversed","flexDirection","undefined","textSide","title","description","linkTo","globalStyles","button","href","imageSide","imagePath","fluid","maxHeight","imgStyle","objectFit","reversed","query","data","pagesStyles","page","currentPath","location","pathname","for","heroStyles","workHero","heroImage","workHeroImage","src","caseHero","alt","workCases","allContentfulCase","edges","reverse","map","edge","key","node","contentfulid","URL","image","includes"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,SAAW,yDAAyD,cAAgB,mEAAmE,UAAY,gCAAgC,SAAW,yDAAyD,cAAgB,qE,qBCDzSD,EAAOC,QAAU,IAA0B,yD,4OCK5B,WAAAC,GACb,OACE,yBACEC,UAAWC,IAAOC,aAClBC,MAAOJ,EAAMK,WAAa,CAAEC,cAAe,oBAAkBC,GAE7D,yBAAKN,UAAWC,IAAOM,UACrB,wBAAIP,UAAWC,IAAOO,OAAQT,EAAMS,OACpC,uBAAGR,UAAWC,IAAOQ,aAAcV,EAAMU,YAAYA,eAClDV,EAAMW,QACP,uBAAGV,UAAWW,IAAaC,OAAQC,KAAMd,EAAMW,QAA/C,SACYX,EAAMS,QAItB,yBAAKR,UAAWC,IAAOa,aAClBf,EAAMgB,WACP,kBAAC,IAAD,CACEC,MAAOjB,EAAMgB,UACbZ,MAAO,CAAEc,UAAW,KACpBC,SAAU,CAAED,UAAW,IAAKE,UAAW,gB,0CCf7CC,EAAW,CAAC,YAAa,kBAkClBC,GAhCE,0BAAGC,EAAH,EAAGA,KAASvB,EAAZ,+BACb,yBAAKC,UAAWuB,IAAYC,MAC1B,kBAAC,IAAD,CAAQC,YAAa1B,EAAM2B,SAASC,WACpC,kBAAC,IAAD,CACEC,IAAI,OACJC,WAAY5B,IAAO6B,SACnBC,UACE,yBACE/B,UAAWC,IAAO+B,cAClBC,IAAKC,IACLC,IAAI,mCAIV,yBAAKnC,UAAWC,IAAOmC,WACpBd,EAAKe,kBAAkBC,MAAMC,UAAUC,KAAI,SAAAC,GAC1C,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAKE,KAAKC,aACfpC,MAAOiC,EAAKE,KAAKnC,MACjBC,YAAagC,EAAKE,KAAKlC,YACvBC,OAAQ+B,EAAKE,KAAKE,IAClB9B,UAAW0B,EAAKE,KAAKG,OAASL,EAAKE,KAAKG,MAAM9B,MAC9CZ,WAAYgB,EAAS2B,SAASN,EAAKE,KAAKC,oBAKhD,kBAAC,IAAD,QAIc","file":"component---src-pages-work-index-js-db177568d510d17860fe.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"workHero\":\"work-module--workHero--ejtJn pages-module--hero--jzr91\",\"workHeroImage\":\"work-module--workHeroImage--2_x2r pages-module--heroImage--3VNzO\",\"workCases\":\"work-module--workCases--2Iu4-\",\"vareHero\":\"work-module--vareHero--1BdEE pages-module--hero--jzr91\",\"vareHeroImage\":\"work-module--vareHeroImage--1EfrF pages-module--heroImage--3VNzO\"};","module.exports = __webpack_public_path__ + \"static/case-hero-b61b03075a44e17bee2850706b469856.png\";","import React from 'react';\nimport Img from 'gatsby-image';\nimport styles from './components.module.css';\nimport globalStyles from '../global.module.css';\n\nexport default props => {\n  return (\n    <div\n      className={styles.imageAndText}\n      style={props.isReversed ? { flexDirection: 'row-reverse' } : undefined}\n    >\n      <div className={styles.textSide}>\n        <h2 className={styles.title}>{props.title}</h2>\n        <p className={styles.description}>{props.description.description}</p>\n        {!!props.linkTo && (\n          <a className={globalStyles.button} href={props.linkTo}>\n            {`Go to ${props.title}`}\n          </a>\n        )}\n      </div>\n      <div className={styles.imageSide}>\n        {!!props.imagePath && (\n          <Img\n            fluid={props.imagePath}\n            style={{ maxHeight: 800 }}\n            imgStyle={{ maxHeight: 800, objectFit: 'contain' }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport caseHero from '../../assets/png/case-hero.png';\nimport Footer from '../../components/footer';\nimport Header from '../../components/header';\nimport Hero from '../../components/hero';\nimport ImageAndText from '../../components/imageAndText';\nimport pagesStyles from '../pages.module.css';\nimport styles from './work.module.css';\n\nconst reversed = ['case:vare', 'case:macgregor'];\n\nexport default ({ data, ...props }) => (\n  <div className={pagesStyles.page}>\n    <Header currentPath={props.location.pathname} />\n    <Hero\n      for=\"work\"\n      heroStyles={styles.workHero}\n      heroImage={\n        <img\n          className={styles.workHeroImage}\n          src={caseHero}\n          alt=\"Phone with VÃ¤ppi application\"\n        />\n      }\n    />\n    <div className={styles.workCases}>\n      {data.allContentfulCase.edges.reverse().map(edge => {\n        return (\n          <ImageAndText\n            key={edge.node.contentfulid}\n            title={edge.node.title}\n            description={edge.node.description}\n            linkTo={edge.node.URL}\n            imagePath={edge.node.image && edge.node.image.fluid}\n            isReversed={reversed.includes(edge.node.contentfulid)}\n          />\n        );\n      })}\n    </div>\n    <Footer />\n  </div>\n);\n\nexport const query = graphql`\n  query {\n    allContentfulCase {\n      edges {\n        node {\n          contentfulid\n          title\n          subtitle\n          description {\n            description\n          }\n          URL\n          image {\n            fluid {\n              ...GatsbyContentfulFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}