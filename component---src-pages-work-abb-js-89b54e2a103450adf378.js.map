{"version":3,"sources":["webpack:///./src/components/CenterTitle/centerTitle.module.css","webpack:///./src/components/CenterTitle/centerTitle.js","webpack:///./src/components/Results/results.module.css","webpack:///./src/components/Feature/feature.module.css","webpack:///./src/components/Feature/feature.js","webpack:///./src/pages/work/abb.js","webpack:///./src/components/Results/results.js"],"names":["module","exports","CenterTitle","props","className","classnames","styles","centerTitle","children","divider","Feature","feature","header","svgPath","alt","icon","src","titles","title","subtitle","description","paragraph","reversed","greyed","ABB","data","isMobile","useMedia","isDesktop","useState","showcaseIndex","setShowcaseIndex","currentShowcase","showcase","edges","find","edge","node","contentfulid","currentShowcaseImage","renderImageAndText","image","key","imagePath","fluid","isReversed","includes","hasGreyBackground","pagesStyles","page","charSet","rel","href","currentPath","path","abbHero","hero","heroClassName","abbHeroImage","heroAlt","heroImage","linkBackTo","content","abbFeatures","tripleFeature","map","index","svgImage","file","url","imageAndText","bgColor","handlePreviousShowcase","length","handleNextShowcase","style","width","height","imgStyle","left","right","margin","objectFit","details","showcaseImagesLength","handleChangeShowcaseIndex","quote","quotation","results","VareResults","vareResults","sections","section1","rawText","section2","title2","description2","section3","ratingTitle","title3","ratingSubtitle","description3","title4","description4","Results"],"mappings":"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","file":"component---src-pages-work-abb-js-89b54e2a103450adf378.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerTitle\":\"centerTitle-module--centerTitle--2zrwW\",\"divider\":\"centerTitle-module--divider--2sn2H\"};","import classnames from 'classnames';\nimport React from 'react';\nimport styles from './centerTitle.module.css';\n\nconst CenterTitle = props => {\n  return (\n    <div className={classnames(styles.centerTitle, props.className)}>\n      <h3>{props.children}</h3>\n      <div className={styles.divider} />\n    </div>\n  );\n};\n\nexport default CenterTitle;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"results\":\"results-module--results--2EBtw\",\"title\":\"results-module--title--1fZ-1\",\"description\":\"results-module--description--3F8L9\",\"sections\":\"results-module--sections--38Kha\",\"section1\":\"results-module--section1--1qUbW\",\"section2\":\"results-module--section2--2-8Gb\",\"content\":\"results-module--content--P6Ceg\",\"section3\":\"results-module--section3--1CBQI\",\"vareResults\":\"results-module--vareResults--1cFuX\",\"ratingTitle\":\"results-module--ratingTitle--3AlSI\",\"ratingSubtitle\":\"results-module--ratingSubtitle--3-7lO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feature\":\"feature-module--feature--3I5aT\",\"header\":\"feature-module--header--3q4jP\",\"icon\":\"feature-module--icon--3RWuj\",\"titles\":\"feature-module--titles--WCVrU\",\"title\":\"feature-module--title--1KKVg\",\"description\":\"feature-module--description--3y_dn\",\"subtitle\":\"feature-module--subtitle--LrkHt\"};","import React from 'react';\nimport styles from './feature.module.css';\n\nconst Feature = props => {\n  return (\n    <div className={styles.feature}>\n      <div className={styles.header}>\n        {!!props.svgPath && (\n          <img alt=\"Feature icon\" className={styles.icon} src={props.svgPath} />\n        )}\n        <div className={styles.titles}>\n          <div className={styles.title}>{props.title}</div>\n          <div className={styles.subtitle}>{props.subtitle}</div>\n        </div>\n      </div>\n      <p className={styles.description}>{props.paragraph}</p>\n    </div>\n  );\n};\n\nexport default Feature;\n","import { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { get } from 'lodash';\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Feature from '../../components/Feature/feature';\nimport Footer from '../../components/Footer/footer';\nimport Header from '../../components/Header/header';\nimport Hero from '../../components/Hero/hero';\nimport ImageAndText from '../../components/ImageAndText/imageAndText';\nimport Quote from '../../components/Quote/quote';\nimport Results from '../../components/Results/results';\nimport MobileShowcase from '../../components/Showcase/mobileShowcase';\nimport Showcase from '../../components/Showcase/showcase';\nimport useMedia from '../../hooks/useMedia';\nimport pagesStyles from '../pages.module.css';\nimport styles from './work.module.css';\n\nconst reversed = ['work:abb:imageAndText2', 'work:abb:imageAndText4'];\nconst greyed = ['work:abb:imageAndText1', 'work:abb:imageAndText3'];\n\nconst ABB = ({ data, ...props }) => {\n  const isMobile = useMedia('(max-width: 480px)');\n  const isDesktop = useMedia('(min-width: 1025px)');\n  const [showcaseIndex, setShowcaseIndex] = useState(0);\n\n  const currentShowcase = data.showcase.edges.find(\n    edge => edge.node.contentfulid === `work:abb:showcase${showcaseIndex + 1}`\n  );\n  const currentShowcaseImage = get(currentShowcase, 'node.images[0]');\n\n  const handlePreviousShowcase = () => {\n    if (showcaseIndex === 0) {\n      setShowcaseIndex(data.showcase.edges.length - 1);\n    } else {\n      setShowcaseIndex(showcaseIndex - 1);\n    }\n  };\n\n  const handleNextShowcase = () => {\n    if (showcaseIndex === data.showcase.edges.length - 1) {\n      setShowcaseIndex(0);\n    } else {\n      setShowcaseIndex(showcaseIndex + 1);\n    }\n  };\n\n  const renderImageAndText = edge => {\n    if (\n      edge &&\n      edge.node &&\n      edge.node.contentfulid &&\n      edge.node.title &&\n      edge.node.description &&\n      edge.node.image\n    ) {\n      return (\n        <ImageAndText\n          key={edge.node.contentfulid}\n          title={edge.node.title}\n          description={edge.node.description}\n          imagePath={edge.node.image && edge.node.image.fluid}\n          isReversed={!isMobile && reversed.includes(edge.node.contentfulid)}\n          hasGreyBackground={greyed.includes(edge.node.contentfulid)}\n        />\n      );\n    } else return null;\n  };\n\n  return (\n    <div className={pagesStyles.page}>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Neptune Studios | Case ABB</title>\n        <link rel=\"canonical\" href=\"https://neptunestudios.com/work/abb/\" />\n      </Helmet>\n      <Header currentPath={props.path} />\n      <Hero\n        className={styles.abbHero}\n        title={data.hero.title}\n        subtitle={data.hero.subtitle}\n        description={data.hero.description}\n        heroClassName={styles.abbHeroImage}\n        heroAlt=\"Tablets with ABB application\"\n        heroImage={data.hero?.image?.fluid}\n        linkBackTo=\"/work\"\n      />\n      <div className={pagesStyles.content}>\n        <div className={styles.abbFeatures}>\n          {data.tripleFeature.feature.map((feature, index) => (\n            <Feature\n              key={`${feature.title}:${index}`}\n              svgPath={feature.svgImage.file.url}\n              title={feature.title}\n              subtitle={feature.subtitle}\n              paragraph={feature.description.description}\n            />\n          ))}\n        </div>\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:abb:imageAndText1'\n          )\n        )}\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:abb:imageAndText2'\n          )\n        )}\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:abb:imageAndText3'\n          )\n        )}\n        {renderImageAndText(\n          data.imageAndText.edges.find(\n            edge => edge.node.contentfulid === 'work:abb:imageAndText4'\n          )\n        )}\n        {!isMobile && (\n          <Showcase\n            bgColor=\"#21B8BF\"\n            currentShowcase={currentShowcase}\n            handlePreviousShowcase={handlePreviousShowcase}\n            handleNextShowcase={handleNextShowcase}\n          >\n            {!!currentShowcaseImage && (\n              <Img\n                fluid={currentShowcaseImage.fluid}\n                style={{ width: '100%', height: isDesktop ? '44rem' : '40vh' }}\n                imgStyle={{\n                  width: '75%',\n                  height: 'unset',\n                  left: 0,\n                  right: 0,\n                  margin: '0 auto',\n                  objectFit: 'contain',\n                }}\n              />\n            )}\n          </Showcase>\n        )}\n        {isMobile && (\n          <MobileShowcase\n            bgColor=\"#21B8BF\"\n            height={currentShowcaseImage.file.details.image.height - 75}\n            currentShowcase={currentShowcase}\n            showcaseIndex={showcaseIndex}\n            showcaseImagesLength={data.showcase.edges.length}\n            handleChangeShowcaseIndex={index => setShowcaseIndex(index)}\n          >\n            {!!currentShowcaseImage && (\n              <Img\n                fluid={currentShowcaseImage.fluid}\n                style={{ width: '100%' }}\n                imgStyle={{\n                  width: '100%',\n                  height: 'unset',\n                  left: 0,\n                  right: 0,\n                  margin: '0 auto',\n                  objectFit: 'contain',\n                }}\n              />\n            )}\n          </MobileShowcase>\n        )}\n        <Quote quote={data.quotation} />\n        <Results results={data.results} />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ABB;\n\nexport const query = graphql`\n  query {\n    hero: contentfulHero(contentfulid: { eq: \"work:abb:hero\" }) {\n      title\n      subtitle\n      description {\n        raw\n      }\n      image {\n        fluid {\n          ...GatsbyContentfulFluid_noBase64\n        }\n      }\n    }\n    tripleFeature: contentfulTripleFeature(\n      contentfulid: { eq: \"work:abb:triplefeature\" }\n    ) {\n      feature {\n        title\n        subtitle\n        description {\n          description\n        }\n        svgImage {\n          file {\n            url\n          }\n        }\n      }\n    }\n    imageAndText: allContentfulImageAndText(\n      filter: { contentfulid: { regex: \"/work:abb:imageAndText/\" } }\n    ) {\n      edges {\n        node {\n          contentfulid\n          title\n          description {\n            raw\n          }\n          image {\n            fluid {\n              ...GatsbyContentfulFluid_noBase64\n            }\n          }\n        }\n      }\n    }\n    showcase: allContentfulShowcase(\n      filter: { contentfulid: { regex: \"/work:abb:showcase/\" } }\n    ) {\n      edges {\n        node {\n          contentfulid\n          title\n          images {\n            fluid {\n              ...GatsbyContentfulFluid_noBase64\n            }\n            file {\n              details {\n                image {\n                  height\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    quotation: contentfulQuotation(contentfulid: { eq: \"work:abb:quotation\" }) {\n      quote\n    }\n    results: contentfulResults(contentfulid: { eq: \"work:abb:results\" }) {\n      title\n      description {\n        raw\n      }\n      title2\n      description2\n      title3\n      description3\n      title4\n      description4\n    }\n  }\n`;\n","import classnames from 'classnames';\nimport React from 'react';\nimport CenterTitle from '../CenterTitle/centerTitle';\nimport RichText from '../RichText/richText';\nimport styles from './results.module.css';\n\nexport const VareResults = props => {\n  return (\n    <div className={classnames(styles.results, styles.vareResults)}>\n      <CenterTitle className={styles.title}>{props.results.title}</CenterTitle>\n      <div className={styles.sections}>\n        <div className={styles.section1}>\n          <div className={styles.content}>\n            <RichText\n              className={styles.description}\n              rawText={props.results.description}\n            />\n          </div>\n        </div>\n        <div className={styles.section2}>\n          <div className={styles.content}>\n            <h3 className={styles.title}>{props.results.title2}</h3>\n            <div className={styles.description}>\n              {props.results.description2}\n            </div>\n          </div>\n        </div>\n        <div className={styles.section3}>\n          <div className={styles.content}>\n            <div>\n              <h3 className={styles.ratingTitle}>{props.results.title3}</h3>\n              <div className={styles.ratingSubtitle}>\n                {props.results.description3}\n              </div>\n            </div>\n            <div>\n              <h3 className={styles.ratingTitle}>{props.results.title4}</h3>\n              <div className={styles.ratingSubtitle}>\n                {props.results.description4}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Results = props => {\n  return (\n    <div className={styles.results}>\n      <CenterTitle className={styles.title}>{props.results.title}</CenterTitle>\n      <div className={styles.sections}>\n        <div className={styles.section1}>\n          <div className={styles.content}>\n            <RichText\n              className={styles.description}\n              rawText={props.results.description}\n            />\n          </div>\n        </div>\n        <div className={styles.section2}>\n          <div className={styles.content}>\n            <h3 className={styles.title}>{props.results.title2}</h3>\n            <div className={styles.description}>\n              {props.results.description2}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n"],"sourceRoot":""}