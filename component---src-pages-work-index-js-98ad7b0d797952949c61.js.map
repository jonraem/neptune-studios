{"version":3,"sources":["webpack:///./src/pages/work/work.module.css","webpack:///./src/assets/png/case-hero.png","webpack:///./src/components/imageAndText.js","webpack:///./src/pages/work/index.js"],"names":["module","exports","props","className","styles","imageAndText","style","isReversed","flexDirection","undefined","textSide","title","description","linkTo","globalStyles","button","to","imageSide","imagePath","fluid","maxHeight","imgStyle","objectFit","reversed","sortOrder","query","data","pagesStyles","page","currentPath","path","for","heroStyles","workHero","heroImage","workHeroImage","src","caseHero","alt","workCases","getSortedCases","allContentfulCase","edges","map","edge","key","node","contentfulid","URL","image","includes"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,SAAW,yDAAyD,cAAgB,mEAAmE,UAAY,gCAAgC,SAAW,yDAAyD,cAAgB,mEAAmE,aAAe,qC,qBCD3XD,EAAOC,QAAU,IAA0B,yD,wPCM5B,WAAAC,GACb,OACE,yBACEC,UAAWC,IAAOC,aAClBC,MAAOJ,EAAMK,WAAa,CAAEC,cAAe,oBAAkBC,GAE7D,yBAAKN,UAAWC,IAAOM,UACrB,wBAAIP,UAAWC,IAAOO,OAAQT,EAAMS,OACpC,uBAAGR,UAAWC,IAAOQ,aAAcV,EAAMU,YAAYA,eAClDV,EAAMW,QACP,kBAAC,IAAD,CAAMV,UAAWW,IAAaC,OAAQC,GAAId,EAAMW,QAAhD,SACYX,EAAMS,QAItB,yBAAKR,UAAWC,IAAOa,aAClBf,EAAMgB,WACP,kBAAC,IAAD,CACEC,MAAOjB,EAAMgB,UACbZ,MAAO,CAAEc,UAAW,KACpBC,SAAU,CAAED,UAAW,IAAKE,UAAW,gB,sDCf7CC,EAAW,CAAC,YAAa,kBACzBC,EAAY,CAAC,YAAa,WAAY,iBAAkB,gBAkCjDC,GAhCE,0BAAGC,EAAH,EAAGA,KAASxB,EAAZ,+BACb,yBAAKC,UAAWwB,IAAYC,MAC1B,kBAAC,IAAD,CAAQC,YAAa3B,EAAM4B,OAC3B,kBAAC,IAAD,CACEC,IAAI,OACJC,WAAY5B,IAAO6B,SACnBC,UACE,yBACE/B,UAAWC,IAAO+B,cAClBC,IAAKC,IACLC,IAAI,mCAIV,yBAAKnC,UAAWC,IAAOmC,WACpBC,YAAed,EAAKe,kBAAkBC,MAAOlB,GAAWmB,KAAI,SAAAC,GAC3D,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAKE,KAAKC,aACfpC,MAAOiC,EAAKE,KAAKnC,MACjBC,YAAagC,EAAKE,KAAKlC,YACvBC,OAAQ+B,EAAKE,KAAKE,IAClB9B,UAAW0B,EAAKE,KAAKG,OAASL,EAAKE,KAAKG,MAAM9B,MAC9CZ,WAAYgB,EAAS2B,SAASN,EAAKE,KAAKC,oBAKhD,kBAAC,IAAD,QAIc","file":"component---src-pages-work-index-js-98ad7b0d797952949c61.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"workHero\":\"work-module--workHero--ejtJn pages-module--hero--jzr91\",\"workHeroImage\":\"work-module--workHeroImage--2_x2r pages-module--heroImage--3VNzO\",\"workCases\":\"work-module--workCases--2Iu4-\",\"vareHero\":\"work-module--vareHero--1BdEE pages-module--hero--jzr91\",\"vareHeroImage\":\"work-module--vareHeroImage--1EfrF pages-module--heroImage--3VNzO\",\"vareFeatures\":\"work-module--vareFeatures--1Ulz6\"};","module.exports = __webpack_public_path__ + \"static/case-hero-b61b03075a44e17bee2850706b469856.png\";","import { Link } from 'gatsby';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport styles from './components.module.css';\nimport globalStyles from '../global.module.css';\n\nexport default props => {\n  return (\n    <div\n      className={styles.imageAndText}\n      style={props.isReversed ? { flexDirection: 'row-reverse' } : undefined}\n    >\n      <div className={styles.textSide}>\n        <h2 className={styles.title}>{props.title}</h2>\n        <p className={styles.description}>{props.description.description}</p>\n        {!!props.linkTo && (\n          <Link className={globalStyles.button} to={props.linkTo}>\n            {`Go to ${props.title}`}\n          </Link>\n        )}\n      </div>\n      <div className={styles.imageSide}>\n        {!!props.imagePath && (\n          <Img\n            fluid={props.imagePath}\n            style={{ maxHeight: 800 }}\n            imgStyle={{ maxHeight: 800, objectFit: 'contain' }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport caseHero from '../../assets/png/case-hero.png';\nimport Footer from '../../components/footer';\nimport Header from '../../components/header';\nimport Hero from '../../components/hero';\nimport ImageAndText from '../../components/imageAndText';\nimport pagesStyles from '../pages.module.css';\nimport styles from './work.module.css';\nimport { getSortedCases } from '../../utils/helpers';\n\nconst reversed = ['case:vare', 'case:macgregor'];\nconst sortOrder = ['case:vare', 'case:abb', 'case:macgregor', 'case:various'];\n\nexport default ({ data, ...props }) => (\n  <div className={pagesStyles.page}>\n    <Header currentPath={props.path} />\n    <Hero\n      for=\"work\"\n      heroStyles={styles.workHero}\n      heroImage={\n        <img\n          className={styles.workHeroImage}\n          src={caseHero}\n          alt=\"Phone with VÃ¤ppi application\"\n        />\n      }\n    />\n    <div className={styles.workCases}>\n      {getSortedCases(data.allContentfulCase.edges, sortOrder).map(edge => {\n        return (\n          <ImageAndText\n            key={edge.node.contentfulid}\n            title={edge.node.title}\n            description={edge.node.description}\n            linkTo={edge.node.URL}\n            imagePath={edge.node.image && edge.node.image.fluid}\n            isReversed={reversed.includes(edge.node.contentfulid)}\n          />\n        );\n      })}\n    </div>\n    <Footer />\n  </div>\n);\n\nexport const query = graphql`\n  query {\n    allContentfulCase {\n      edges {\n        node {\n          contentfulid\n          title\n          subtitle\n          description {\n            description\n          }\n          URL\n          image {\n            fluid {\n              ...GatsbyContentfulFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}